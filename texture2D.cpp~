#include "texture2D.hpp"
#include "opengl_data_type_enum_length.hpp"

Texture2D::Texture2D(GLubyte * const data, GLint internal_format, GLenum format, GLenum type, GLsizei width, GLsizei height) : Texture(internal_format,format,type, GL_TEXTURE_2D), width(width), height(height) {
  this->data = copy_data(data);
  // correct texture should already be bound in the parent constructor.
  glTexImage2D(target,0, internal_format,width,height,0,format,type,data);
  //TODO move these to the object (and change the target etc.)
  glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP);
  glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP);
  glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER,
		  GL_LINEAR);
  glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER,
		  GL_LINEAR);
  /* DEBUGGING
  GLint tb;
  glGetIntegerv(GL_TEXTURE_BINDING_2D,&tb);
  glGetIntegerv(GL_ACTIVE_TEXTURE,&tb);
  GLint active_tex = tb - GL_TEXTURE0;
  glBindTexture(target,0);
  tb;
  glGetIntegerv(GL_TEXTURE_BINDING_2D,&tb);
  glGetIntegerv(GL_ACTIVE_TEXTURE,&tb);
  active_tex = tb - GL_TEXTURE0;
  */
}

GLsizei Texture2D::get_data_length_in_bytes() {
  return width*height*PixelType::nbr_elements_per_pixel(format)*DataType::sizeof_enum(type);
}
