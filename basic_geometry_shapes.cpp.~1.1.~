#include "basic_geometry_shapes.hpp"

RayShape::RayShape(const glm::vec3 & a, const glm::vec3 & d) : Shape(), a(a), d(d) {
  set_mesh();
}

Mesh * RayShape::create_mesh() {
  Mesh * mesh = new Mesh(LINES,INDEXED);
  GLfloat data[2*4] = {a[0],a[1],a[2],1.0f,
		       a[0]+d[0],a[1]+d[1],a[2]+d[2],0.0f};
  GLuint index_data[2] = {
    0,1
  };
  mesh->add_attribute_array(4,2,data);
  mesh->set_index_array(2,index_data);
  //mesh->convert_to_triangles();
  //mesh->create_adjacency_data();
  
  mesh->save_to_memory();
  mesh->save_index_data_to_memory();
  //mesh->save_adjacency_data_to_memory(GL_FALSE);
  return mesh;
}
